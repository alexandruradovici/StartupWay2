import Vue from "vue";
import { WorkshopDay } from "../../common";
import { SnackBarOptions } from "@startupway/menu/lib/ui";
import { UI } from '@startupway/main/lib/ui';
declare const _default: import("vue/types/vue").ExtendedVue<Vue, {
    ui: UI;
    productValid: boolean;
    loadingUpload: boolean;
    loadingPage: boolean;
    extendedImage: string;
    extendDialog: boolean;
    teamTypes: never[];
    businessTracks: never[];
    workshopDays: never[];
    workshops: never[];
    teamId: string;
    productId: string;
    startupRules: ((value: string) => true | "Team needs a name")[];
    startupName: string;
    businessTrack: string;
    teamType: string;
    workshopDay: typeof WorkshopDay;
    workshop_day: string;
    workshop_nr: string;
    descr_ENG: string;
    descr_RO: string;
    last_presentation: string;
    link_website: string;
    link_linkedin: string;
    link_facebook: string;
    assessment12Oct: string;
    assessment20May: string;
    pending_descr_RO: string;
    pending_descr_ENG: string;
    rulesPres: ((value: File) => true | "File size should be less than 300mb!")[];
    rulesDemoVid: ((value: File) => true | "File size should be less than 300mb!")[];
    rulesPresVid: ((value: File) => true | "File size should be less than 300mb!")[];
    rulesFiles: ((value: File) => true | "File size should be less than 300mb!")[];
    rulesLogo: ((value: File) => true | "File size should be less than 300mb!")[];
    rulesDesc: ((value: string) => true | "Description must have at most 600 characters")[];
    validPres: boolean;
    validDemoVid: boolean;
    validPresVid: boolean;
    validLogo: boolean;
    validFiles: boolean;
    presFile: File | undefined;
    demoVidFile: File | undefined;
    presVidFile: File | undefined;
    logoFile: File | undefined;
    imgFiles: File | undefined;
    uuidTemp: string;
    partTotal: string | number;
    parts: number;
    increment: number;
    images: {
        data: string;
        type: string;
        ext: string;
        uuid: string;
    }[];
    logo: {
        data: string;
        type: string;
        ext: string;
        uuid: string;
    };
    presVid: {
        data: string;
        type: string;
        ext: string;
        uuid: string;
    };
    demoVid: {
        data: string;
        type: string;
        ext: string;
        uuid: string;
    };
    pres: {
        data: string;
        type: string;
        ext: string;
        uuid: string;
    };
    showDeletePresentation: boolean;
    showDownloadPresentation: boolean;
    showDeleteVideo: boolean;
    showDownloadVideo: boolean;
    showDeleteDemo: boolean;
    showDownloadDemo: boolean;
    showDeleteLogo: boolean;
    showDownloadLogo: boolean;
    snackOptions: SnackBarOptions;
    snackbar: boolean;
}, {
    _enumToData(enumData: any, name: string): void;
    extendImage(image: string): void;
    refreshLoads(): Promise<void>;
    formatDate(date: Date): string;
    updateProduct(): Promise<void>;
    upload(type: string): Promise<void>;
    update(prop: boolean): void;
    deleteObj(uuid: string): Promise<void>;
    download(uuid: string): Promise<void>;
    parseFile(file: File, type: string, offset: number): Promise<void>;
}, {
    currentTeam: any;
    product: any;
}, Record<never, any>>;
export default _default;
//# sourceMappingURL=ProductSummary.vue?rollup-plugin-vue=script.d.ts.map